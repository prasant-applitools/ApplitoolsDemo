# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

env:
  APPLITOOLS_BATCH_ID: ${{ github.sha }}
  #${{ github.event.pull_request.head.sha || github.sha }}
  APPLITOOLS_BATCH_NAME: ${{ github.repository }}
  APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
  
on:
  push:
    branches: [ "**" ]

jobs:
  run-tests:

    runs-on: ubuntu-latest
    environment: Applitools
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: SHA
      run: echo ${{ env.APPLITOOLS_BATCH_ID }}

    - name: Branch Name
      run: echo ${GITHUB_REF##*/}
      
  batch-completion-notification:
    needs: run-tests
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Update Applitools batch status 
        uses: wei/curl@v1.1.1
        with:
          args: -d "" -X POST https://eyesapi.applitools.com/api/externals/github/servers/github.com/commit/${{ env.APPLITOOLS_BATCH_ID }}/complete?apiKey=${{ secrets.APPLITOOLS_API_KEY }}
